<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   id="paper_sum"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   width="200" height="150"
   viewBox="0 0 200 150"
   preserveAspectRatio="none"
   >
  <defs id="defs2">
    <filter id="app-filter-colorize" color-interpolation-filters="sRGB" >
      <feColorMatrix id="recolorize-filter-matrix" type="matrix"
         values="1.0 0.0 0.0 0.0  0.0
                 1.0 0.0 0.0 0.0  0.0
                 1.0 0.0 0.0 0.0  0.0
                 0.0 0.0 0.0 1.0  0.0" />
    </filter>
    <linearGradient
       id="linearGradient820"
       >
      <stop
         style="stop-color:#f0f0f0;stop-opacity:1"
         offset="0"
         id="stop826" />
      <stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="1"
         id="stop824" />
    </linearGradient>
    <linearGradient
       xlink:href="#linearGradient820"
       id="linearGradient22"
       x1="36.7"
       y1="263.7"
       x2="37.0"
       y2="285.0"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(3.8041646,0,0,3.8135004,-0.53771847,-984.16693)" />
  </defs>
  <script
     type="text/javascript"
     data-namespace="paper_sum"
     id="script_paper_sum"><![CDATA[
var paper_sum = {

  dom_change_handler: function(evt) {
     console.log('dom_change_handler', this.id, evt.detail)
    let sum = 0

    paper.visit_contents_group(this, (s) => {
      let tempNum = 0
      s.querySelectorAll('tspan').forEach((t) => {
        if (t.closest('svg').id !== s.id) {
          // it's buried multiple levels deep in sub-SVGs
          // so skip it lest it be double-counted
          return
        }
        c = t.textContent.trim()
        num = parseInt(c)
        if (isNaN(num)) {
          if (c == '+') {
            tempNum = 1
          } else if (c == '-') {
            tempNum = -1
          }
        } else {
          tempNum =  num
        }
      })
      sum = sum + tempNum
    })
    let tspan = this.querySelector(`#${this.id} > text > #tspan_result`)
    tspan.textContent = sum
  },

  initialize: function(elem, prototype) {
    elem.addEventListener('dom_change', this.dom_change_handler)
    elem.addEventListener('resize', paper.resize_handler.bind(elem))
    // elem.addEventListener('resize', this.resize_handler)
  },

 // resize_handler: function(evt) {
 //   console.log('getting rid of sum special path')
 //   let path_area = this.querySelector(
 //     `#${this.id} > :not(.contents_group) .path_area`
 //   )
 //   if (path_area) { path_area.remove() }
 // },

  menu: {
    'Roll All': {
      eventName: 'paper_roll',
      applicable: (node) => { return true },
      handler: function(evt) {
        return paper.roll_handler(this, evt)
      },
    },
  },

}

    ]]></script>
  <script
    type="text/javascript"
    src="js/paper.js"
    data-namespace="paper"
    id="script_paper" />
  <svg id="resizable_bg"
    x="0" y="0" width="200" height="150"
    viewBox="0 0 200 150"
    preserveAspectRatio="none"
    class="droptarget"
  >
    <rect
       id="shadow_rect"
       fill="#000"
       opacity="0.4"
       x="4" y="4"
       width="196"
       height="146"
    />
    <rect
       id="white_rect"
       fill="#fff"
       x="0" y="0"
       width="190"
       height="140"
    />
    <g id="group-monochrome-1" class="colorable" filter="url(#app-filter-colorize)">
      <rect
         id="stroke_rect"
         fill-opacity="0"
         stroke="#d3d3d3"
         stroke-width="4"
         style="stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         x="2" y="2"
         width="190"
         height="140"
      />
    </g>
  </svg>
  <svg x="10" y="0" >
  <text
     id="text_label"
     y="30"
     x="0"
     style="font-style:normal;
     font-weight:normal;
     font-size:28px;line-height:125%;font-family:SubotypeSteady;
     letter-spacing:0px;word-spacing:0px;
     fill:#000080;fill-opacity:1;
     "
     xml:space="preserve"><tspan
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:SubotypeSteady;fill:#000080;stroke-width:0.269px"
       id="tspan_label"
       >Label</tspan></text>
  </svg>
  <g id="contents_group" class="contents_group">
  </g>
  <svg x="0" y="80%"
  width="100%" height="50"
  viewBox="0 0 100 50" preserveAspectRatio="xMaxYMin meet" >
  <text
     id="text_rule"
     class="text_rule"
     x="0"
     y="30"
     style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:38.072px;line-height:125%;font-family:SubotypeSteady;letter-spacing:0px;word-spacing:0px;fill:#000080;fill-opacity:1;stroke:none;stroke-width:0.269px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     xml:space="preserve"><tspan
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:SubotypeSteady;fill:#000080;stroke-width:0.269px"
       id="tspan_rule"
       >Sum= </tspan></text>
  <text
     id="text_result"
     class="text_result"
     xml:space="preserve"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:38.072px;line-height:125%;font-family:SubotypeSteady;letter-spacing:0px;word-spacing:0px;fill:#000080;fill-opacity:1;stroke:none;stroke-width:0.26px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     x="70"
     y="30"
     ><tspan
       id="tspan_result"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:SubotypeSteady;stroke-width:0.26">0</tspan>
       </text>
  </svg>
</svg>
